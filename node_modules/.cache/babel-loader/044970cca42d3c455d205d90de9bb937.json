{"ast":null,"code":"var _jsxFileName = \"/home/dh/Repositorio/DanielHott.github.io/src/components/game.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30,\n      isDisabled: false,\n      assertions: 0,\n      questionNumber: 0,\n      isButtonVisible: false\n    };\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n    this.score = this.score.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const token = await fetch('https://opentdb.com/api_token.php?command=request').then(response => response.json()).then(tokenId => tokenId.token);\n    const {\n      questionNumber\n    } = this.state;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    const correct = data.results[questionNumber].correct_answer;\n    const incorrect = data.results[questionNumber].incorrect_answers;\n    const {\n      category,\n      question,\n      difficulty\n    } = data.results[questionNumber];\n    this.setState({\n      category,\n      question,\n      correct,\n      difficulty,\n      incorrectAnswers: [...incorrect],\n      renderGame: false\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach(element => {\n      element.style.border = '3px solid rgb(255, 0, 0)';\n    });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n    this.setState({\n      isButtonVisible: true\n    });\n  }\n\n  timer() {\n    const {\n      time\n    } = this.state;\n    const mil = 1000;\n\n    if (time !== 0) {\n      setInterval(() => {\n        this.setState(prevState => {\n          if (prevState.time > 0) {\n            return {\n              time: prevState.time - 1\n            };\n          }\n        });\n      }, mil);\n    }\n  }\n\n  score() {\n    const {\n      assertions\n    } = this.state;\n    const actAssertion = assertions + 1;\n    this.setState({\n      assertions: actAssertion\n    });\n  }\n\n  next() {\n    const {\n      questionNumber,\n      assertions\n    } = this.state;\n    const four = 4;\n\n    if (questionNumber < four) {\n      const actNumber = questionNumber + 1;\n      this.setState({\n        questionNumber: actNumber,\n        isButtonVisible: false,\n        time: 30,\n        renderGame: true\n      });\n      this.fetchApi();\n    } else if (questionNumber === four) {\n      return alert(`Sua pontuação foi:${assertions}`);\n    }\n  }\n\n  render() {\n    const {\n      incorrectAnswers,\n      correct,\n      question,\n      category,\n      time,\n      isDisabled,\n      isButtonVisible\n    } = this.state;\n    return incorrectAnswers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          \"data-testid\": \"question-category\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          \"data-testid\": \"question-text\",\n          children: question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), incorrectAnswers.map((alternative, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: isDisabled,\n          \"data-testid\": `wrong-answer-${index}`,\n          onClick: this.changeColor,\n          className: \"wrong\",\n          children: alternative\n        }, alternative, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: isDisabled,\n          id: \"correct-answer\",\n          onClick: () => {\n            this.changeColor();\n            this.score();\n          },\n          className: \"correct\",\n          children: correct\n        }, correct, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), isButtonVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"btn-next\",\n          type: \"button\",\n          onClick: this.next,\n          children: \"Pr\\xF3xima\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/dh/Repositorio/DanielHott.github.io/src/components/game.jsx"],"names":["React","Game","Component","constructor","state","category","question","correct","incorrectAnswers","time","isDisabled","assertions","questionNumber","isButtonVisible","fetchApi","bind","changeColor","timer","score","next","componentDidMount","token","fetch","then","response","json","tokenId","data","results","correct_answer","incorrect","incorrect_answers","difficulty","setState","renderGame","wrongs","document","querySelectorAll","querySelector","forEach","element","style","border","mil","setInterval","prevState","actAssertion","four","actNumber","alert","render","length","replace","map","alternative","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,gBAAgB,EAAE,EAJP;AAKXC,MAAAA,IAAI,EAAE,EALK;AAMXC,MAAAA,UAAU,EAAE,KAND;AAOXC,MAAAA,UAAU,EAAE,CAPD;AAQXC,MAAAA,cAAc,EAAE,CARL;AASXC,MAAAA,eAAe,EAAE;AATN,KAAb;AAYA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,KAAL,GAAa,KAAKA,KAAL,CAAWF,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKG,KAAL,GAAa,KAAKA,KAAL,CAAWH,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKI,IAAL,GAAY,KAAKA,IAAL,CAAUJ,IAAV,CAAe,IAAf,CAAZ;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,QAAL;AACA,SAAKG,KAAL;AACD;;AAEa,QAARH,QAAQ,GAAG;AACf,UAAMO,KAAK,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAAL,CACnBC,IADmB,CACbC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADA,EAEnBF,IAFmB,CAEbG,OAAD,IAAaA,OAAO,CAACL,KAFP,CAApB;AAGA,UAAM;AAAET,MAAAA;AAAF,QAAqB,KAAKR,KAAhC;AACA,UAAMoB,QAAQ,GAAG,MAAMF,KAAK,CAAE,8CAA6CD,KAAM,EAArD,CAA5B;AACA,UAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACC,IAAT,EAAnB;AACA,UAAMlB,OAAO,GAAGoB,IAAI,CAACC,OAAL,CAAahB,cAAb,EAA6BiB,cAA7C;AACA,UAAMC,SAAS,GAAGH,IAAI,CAACC,OAAL,CAAahB,cAAb,EAA6BmB,iBAA/C;AACA,UAAM;AAAE1B,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsB0B,MAAAA;AAAtB,QAAqCL,IAAI,CAACC,OAAL,CAAahB,cAAb,CAA3C;AACA,SAAKqB,QAAL,CAAc;AACZ5B,MAAAA,QADY;AAEZC,MAAAA,QAFY;AAGZC,MAAAA,OAHY;AAIZyB,MAAAA,UAJY;AAKZxB,MAAAA,gBAAgB,EAAE,CAAC,GAAGsB,SAAJ,CALN;AAMZI,MAAAA,UAAU,EAAE;AANA,KAAd;AAQD;;AAEDlB,EAAAA,WAAW,GAAG;AACZ,UAAMmB,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAf;AACA,UAAM9B,OAAO,GAAG6B,QAAQ,CAACE,aAAT,CAAuB,UAAvB,CAAhB;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAgBC,OAAD,IAAa;AAAEA,MAAAA,OAAO,CAACC,KAAR,CAAcC,MAAd,GAAuB,0BAAvB;AAAoD,KAAlF;AACAnC,IAAAA,OAAO,CAACkC,KAAR,CAAcC,MAAd,GAAuB,2BAAvB;AACA,SAAKT,QAAL,CAAc;AAAEpB,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACD;;AAEDI,EAAAA,KAAK,GAAG;AACN,UAAM;AAAER,MAAAA;AAAF,QAAW,KAAKL,KAAtB;AACA,UAAMuC,GAAG,GAAG,IAAZ;;AACA,QAAIlC,IAAI,KAAK,CAAb,EAAgB;AACdmC,MAAAA,WAAW,CAAC,MAAM;AAChB,aAAKX,QAAL,CAAeY,SAAD,IAAe;AAC3B,cAAIA,SAAS,CAACpC,IAAV,GAAiB,CAArB,EAAwB;AACtB,mBAAQ;AAAEA,cAAAA,IAAI,EAAEoC,SAAS,CAACpC,IAAV,GAAiB;AAAzB,aAAR;AACD;AACF,SAJD;AAKD,OANU,EAMRkC,GANQ,CAAX;AAOD;AACF;;AAEDzB,EAAAA,KAAK,GAAG;AACN,UAAM;AAAEP,MAAAA;AAAF,QAAiB,KAAKP,KAA5B;AACA,UAAM0C,YAAY,GAAGnC,UAAU,GAAG,CAAlC;AACA,SAAKsB,QAAL,CAAc;AAAEtB,MAAAA,UAAU,EAAEmC;AAAd,KAAd;AACH;;AAEC3B,EAAAA,IAAI,GAAG;AACL,UAAM;AAAEP,MAAAA,cAAF;AAAkBD,MAAAA;AAAlB,QAAiC,KAAKP,KAA5C;AACA,UAAM2C,IAAI,GAAG,CAAb;;AACA,QAAInC,cAAc,GAAGmC,IAArB,EAA2B;AACzB,YAAMC,SAAS,GAAGpC,cAAc,GAAG,CAAnC;AACA,WAAKqB,QAAL,CAAc;AAAErB,QAAAA,cAAc,EAAEoC,SAAlB;AACZnC,QAAAA,eAAe,EAAE,KADL;AAEZJ,QAAAA,IAAI,EAAE,EAFM;AAGZyB,QAAAA,UAAU,EAAE;AAHA,OAAd;AAIA,WAAKpB,QAAL;AACD,KAPD,MAOO,IAAIF,cAAc,KAAKmC,IAAvB,EAA6B;AAClC,aAAQE,KAAK,CAAE,qBAAoBtC,UAAW,EAAjC,CAAb;AACD;AACF;;AAEDuC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE1C,MAAAA,gBAAF;AAAoBD,MAAAA,OAApB;AACJD,MAAAA,QADI;AACMD,MAAAA,QADN;AACgBI,MAAAA,IADhB;AACsBC,MAAAA,UADtB;AACkCG,MAAAA;AADlC,QACsD,KAAKT,KADjE;AAEA,WACKI,gBAAgB,CAAC2C,MAAjB,GAA0B,CAA3B,gBACA;AAAA,6BACE;AAAS,QAAA,EAAE,EAAC,MAAZ;AAAA,gCACE;AAAI,yBAAY,mBAAhB;AAAA,oBAAsC9C;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,yBAAY,eAAhB;AAAA,oBACIC,QAAQ,CAAC8C,OAAT,CAAiB,UAAjB,EAA6B,GAA7B,EAAkCA,OAAlC,CAA0C,UAA1C,EAAsD,EAAtD;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKG5C,gBAAgB,CAAC6C,GAAjB,CAAqB,CAACC,WAAD,EAAcC,KAAd,kBACpB;AACE,UAAA,IAAI,EAAC,QADP;AAGE,UAAA,QAAQ,EAAG7C,UAHb;AAIE,yBAAe,gBAAe6C,KAAM,EAJtC;AAKE,UAAA,OAAO,EAAG,KAAKvC,WALjB;AAME,UAAA,SAAS,EAAC,OANZ;AAAA,oBAQGsC;AARH,WAEQA,WAFR;AAAA;AAAA;AAAA;AAAA,gBADD,CALH,eAgBE;AACE,UAAA,IAAI,EAAC,QADP;AAGE,UAAA,QAAQ,EAAG5C,UAHb;AAIE,UAAA,EAAE,EAAC,gBAJL;AAKE,UAAA,OAAO,EAAG,MAAM;AACd,iBAAKM,WAAL;AACA,iBAAKE,KAAL;AACD,WARH;AASE,UAAA,SAAS,EAAC,SATZ;AAAA,oBAWIX;AAXJ,WAEQA,OAFR;AAAA;AAAA;AAAA;AAAA,gBAhBF,EA6BIM,eAAe,iBAEf;AAAQ,yBAAY,UAApB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAA6C,UAAA,OAAO,EAAG,KAAKM,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ,EAkCIV,IAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,gBAuCG;AAAG,MAAA,EAAE,EAAC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCP;AA0CD;;AAxIgC;;AA2InC,eAAeR,IAAf","sourcesContent":["import React from 'react';\n\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30,\n      isDisabled: false,\n      assertions: 0,\n      questionNumber: 0,\n      isButtonVisible: false,\n    };\n\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n    this.score = this.score.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const token = await fetch('https://opentdb.com/api_token.php?command=request')\n    .then((response) => response.json())\n    .then((tokenId) => tokenId.token);\n    const { questionNumber } = this.state;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    const correct = data.results[questionNumber].correct_answer;\n    const incorrect = data.results[questionNumber].incorrect_answers;\n    const { category, question, difficulty } = data.results[questionNumber];\n    this.setState({\n      category,\n      question,\n      correct,\n      difficulty,\n      incorrectAnswers: [...incorrect],\n      renderGame: false,\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach((element) => { element.style.border = '3px solid rgb(255, 0, 0)'; });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n    this.setState({ isButtonVisible: true });\n  }\n\n  timer() {\n    const { time } = this.state;\n    const mil = 1000;\n    if (time !== 0) {\n      setInterval(() => {\n        this.setState((prevState) => {\n          if (prevState.time > 0) {\n            return ({ time: prevState.time - 1 });\n          }\n        });\n      }, mil);\n    }\n  }\n\n  score() {\n    const { assertions } = this.state;\n    const actAssertion = assertions + 1;\n    this.setState({ assertions: actAssertion });\n}\n\n  next() {\n    const { questionNumber, assertions } = this.state;\n    const four = 4;\n    if (questionNumber < four) {\n      const actNumber = questionNumber + 1;\n      this.setState({ questionNumber: actNumber,\n        isButtonVisible: false,\n        time: 30,\n        renderGame: true });\n      this.fetchApi();\n    } else if (questionNumber === four) {\n      return (alert(`Sua pontuação foi:${assertions}`));\n    }\n  }\n\n  render() {\n    const { incorrectAnswers, correct,\n      question, category, time, isDisabled, isButtonVisible } = this.state;\n    return (\n        (incorrectAnswers.length > 0) ? (\n        <div>\n          <section id=\"game\">\n            <h4 data-testid=\"question-category\">{ category }</h4>\n            <h4 data-testid=\"question-text\">\n              { question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '') }\n            </h4>\n            {incorrectAnswers.map((alternative, index) => (\n              <button\n                type=\"button\"\n                key={ alternative }\n                disabled={ isDisabled }\n                data-testid={ `wrong-answer-${index}` }\n                onClick={ this.changeColor }\n                className=\"wrong\"\n              >\n                {alternative}\n              </button>))}\n            <button\n              type=\"button\"\n              key={ correct }\n              disabled={ isDisabled }\n              id=\"correct-answer\"\n              onClick={ () => {\n                this.changeColor();\n                this.score();\n              } }\n              className=\"correct\"\n            >\n              { correct }\n            </button>\n            { isButtonVisible\n            && (\n              <button data-testid=\"btn-next\" type=\"button\" onClick={ this.next }>\n                Próxima\n              </button>)}\n            { time }\n          </section>\n        </div>\n        ): <p id=\"\">Loading</p>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}